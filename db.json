{"meta":{"version":1,"warehouse":"1.0.3"},"models":{"Asset":[{"_id":"themes/iceman/source/js/jquery-2.1.0.min.js","path":"js/jquery-2.1.0.min.js","modified":0},{"_id":"themes/iceman/source/img/pacman1.jpg","path":"img/pacman1.jpg","modified":0},{"_id":"themes/iceman/source/img/pacman.jpg","path":"img/pacman.jpg","modified":0},{"_id":"themes/iceman/source/img/logo.svg","path":"img/logo.svg","modified":0},{"_id":"themes/iceman/source/img/logo.jpg","path":"img/logo.jpg","modified":0},{"_id":"themes/iceman/source/img/favicon.ico","path":"img/favicon.ico","modified":0},{"_id":"themes/iceman/source/img/author1.jpg","path":"img/author1.jpg","modified":0},{"_id":"themes/iceman/source/img/author.jpg","path":"img/author.jpg","modified":0},{"_id":"themes/iceman/source/fotorama/fotorama.js","path":"fotorama/fotorama.js","modified":0},{"_id":"themes/iceman/source/fotorama/fotorama.css","path":"fotorama/fotorama.css","modified":0},{"_id":"themes/iceman/source/font/fontawesome-webfont.woff","path":"font/fontawesome-webfont.woff","modified":0},{"_id":"themes/iceman/source/font/fontawesome-webfont.ttf","path":"font/fontawesome-webfont.ttf","modified":0},{"_id":"themes/iceman/source/font/fontawesome-webfont.svg","path":"font/fontawesome-webfont.svg","modified":0},{"_id":"themes/iceman/source/font/fontawesome-webfont.eot","path":"font/fontawesome-webfont.eot","modified":0},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.woff","path":"font/coveredbyyourgrace-webfont.woff","modified":0},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.ttf","path":"font/coveredbyyourgrace-webfont.ttf","modified":0},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.svg","path":"font/coveredbyyourgrace-webfont.svg","modified":0},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.eot","path":"font/coveredbyyourgrace-webfont.eot","modified":0},{"_id":"themes/iceman/source/font/FontAwesome.otf","path":"font/FontAwesome.otf","modified":0},{"_id":"themes/iceman/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/iceman/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0},{"_id":"themes/iceman/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0},{"_id":"themes/iceman/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0},{"_id":"themes/iceman/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0},{"_id":"themes/iceman/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/iceman/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/iceman/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0},{"_id":"themes/iceman/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/iceman/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/iceman/source/css/style.styl","path":"css/style.styl","modified":0}],"Cache":[{"_id":"source/_posts/Spring-circular-dependency.md","shasum":"7f87c2f5c0fb28f0b5fad21884111604f52bff96","modified":1446111488607},{"_id":"source/_posts/git-base-commands.md","shasum":"9768110daa3bc347d562641922304885a041bdca","modified":1450165029491},{"_id":"source/_posts/mount-partitions-on-startup-in-archlinux.md","shasum":"9c9f20ca9002d6f4eab13bc6e9328b393338eedf","modified":1453032502637},{"_id":"source/_posts/transactional.md","shasum":"5988525cdc33f61ef2a66230a03f9114cd95a60e","modified":1446970747594},{"_id":"source/_posts/csrf-defense.md","shasum":"e5bb1eb406f273bc872e76b4303781f03a397749","modified":1448179501914},{"_id":"themes/iceman/_config.yml","shasum":"835f7af26e61bbc256b810627addc8d4f2cbe8d7","modified":1444472229907},{"_id":"themes/iceman/languages/zh-CN.yml","shasum":"991b90926686c0d10731a8f4ea61b96c3f087531","modified":1444457487524},{"_id":"themes/iceman/README.md","shasum":"f6768907a82341b5b04a92e02c7b47ae65effd22","modified":1444457487524},{"_id":"themes/iceman/LICENSE","shasum":"0138565d68df6e5536667ad445232981ea808aec","modified":1444457487524},{"_id":"themes/iceman/languages/zh-TW.yml","shasum":"48b652fa2eb73f9f7cd512472d0cb20057152aea","modified":1444457487524},{"_id":"themes/iceman/languages/default.yml","shasum":"7e9594aa9551cd4841905b4b4d4fcabc2b40e447","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/after_footer.ejs","shasum":"8ff72f17647d4df99d7707965c1b33f8ef3217c9","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/archive.ejs","shasum":"a1ada891cbacf49b397cfa7dd921bdd0ae545a4e","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/categories.ejs","shasum":"8a52d0344d5bce1925cf586ed73c11192925209b","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/article.ejs","shasum":"38837fc6a1a799e83b8a75db642b0daf1ff81828","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/footer.ejs","shasum":"26fd3858e31cb2f83ea907937274f398e185d42e","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/fotorama.ejs","shasum":"4300b5f26f8a8fdb3bb8237ed088e9587e6a5ca3","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/google_analytics.ejs","shasum":"b6871f67c87c87acb5295ce4fb673b16a7296a01","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/head.ejs","shasum":"f21fc1b1c16498610a44a552d23059d338f34d2a","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/header.ejs","shasum":"ef17f195173e68c22b0d08800cad4190a2f74f57","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/la51_analytics.ejs","shasum":"00af84be256a2b79070c395756d8d0dfa7df460b","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/pagination.ejs","shasum":"6146ac37dfb4f8613090bc52b3fc8cfa911a186a","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/article.ejs","shasum":"ec5e8f66886dedf35b9a5746d11fe0dc4a7ab68f","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/catetags.ejs","shasum":"f6b107078094333b6567d4a97700f559159675e1","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/comment.ejs","shasum":"5c0afcd1fd1d7b4e8335f76bc181b8e72ffed38e","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/footer.ejs","shasum":"a9aeae612eb7085bbe74bd12086198320e6c3702","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/gallery.ejs","shasum":"7ca5b1db9439be61a8b77f6f7d857b56fdf1517f","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/header.ejs","shasum":"cf97c1ced47742616296fd4fa3ad235456e98348","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/jiathis.ejs","shasum":"adc047d2bbd031092df86f3be2866ea9c3b5f3c9","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/post/pagination.ejs","shasum":"dd9563aaa7094c7082a16e6c9cbc24b33aaef87c","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/search.ejs","shasum":"aed90406246cc43f60dda8cd6558e9eccee342a4","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/sidebar.ejs","shasum":"b5aeaab660a18b7a4da568f015e61260eb478916","modified":1444457487524},{"_id":"themes/iceman/layout/_partial/tags.ejs","shasum":"b33b2b5d08f1d53a8de25a95f660f7f1cea7b3cb","modified":1444457487524},{"_id":"themes/iceman/layout/_widget/category.ejs","shasum":"9b4cc6be18aa6c5da4cf45913d5be83fc33081db","modified":1444457487524},{"_id":"themes/iceman/layout/_widget/archive.ejs","shasum":"39ea6b7888406fbd1b4cf236ebd718e881493374","modified":1444457487524},{"_id":"themes/iceman/layout/_widget/rss.ejs","shasum":"0a4b5f2a2e36a1d504fe2e7c6c8372cbb4628aab","modified":1444457487524},{"_id":"themes/iceman/layout/_widget/links.ejs","shasum":"3635a1a407fde93a3be58178b85f51ceb8b87f15","modified":1444457487524},{"_id":"themes/iceman/layout/_widget/tag.ejs","shasum":"cc97db230f727c27519298166ad904358811fb53","modified":1444457487524},{"_id":"themes/iceman/layout/_widget/tagcloud.ejs","shasum":"10a1001189d5c28ce6d42494563b9637c302b454","modified":1444457487524},{"_id":"themes/iceman/layout/archive.ejs","shasum":"a18842e3d719fe3ca9b977a6995f8facc75c8673","modified":1444457487524},{"_id":"themes/iceman/layout/category.ejs","shasum":"9b740fc33f6f028df60f0bc4312bf3ebd03aa8ea","modified":1444457487524},{"_id":"themes/iceman/layout/index.ejs","shasum":"774f7e89d05e9a9b43970a873d5100ad5c9d21ba","modified":1444457487524},{"_id":"themes/iceman/layout/layout.ejs","shasum":"179dc221f208e0ed371febde641e61a5614f2d69","modified":1444457487524},{"_id":"themes/iceman/scripts/fancybox.js","shasum":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1444457487524},{"_id":"themes/iceman/layout/page.ejs","shasum":"bd6bbf2ea8e183bd835867ff617dc6366b56748c","modified":1444457487524},{"_id":"themes/iceman/layout/post.ejs","shasum":"3114134775bdde5a83cf14feb019606fa2b2b2be","modified":1444457487524},{"_id":"themes/iceman/layout/tag.ejs","shasum":"45150a2365768b6b67880193c9264ad2bb4814db","modified":1444457487524},{"_id":"themes/iceman/source/css/_base/code.styl","shasum":"330209ebaebe69308e131fada85b9b619c85fbd9","modified":1444457487524},{"_id":"themes/iceman/source/css/_base/font.styl","shasum":"75f264bc742888dbe192e8d19eda70705d13c709","modified":1444457487524},{"_id":"themes/iceman/source/css/_base/public.styl","shasum":"29deec49b60533cc4196175345eaa4b2d611a97e","modified":1444457487524},{"_id":"themes/iceman/source/css/_base/variable.styl","shasum":"2fd69b400d66704f7574537daecf46549aa6250d","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/article.styl","shasum":"82d7621920e221b7e52dfdb74cbcec718d0cc666","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/aside.styl","shasum":"8fb8c2172883913b404f8e49e181103317486ecc","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/duoshuo.styl","shasum":"e85f1192283f043115c272a9deb3cb6ced793990","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/footer.styl","shasum":"04df664c1d125921ac823e0c7151eabeba8b87fb","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/gallery.styl","shasum":"a544a58fdb4c8dd8274159323abd1e38cb03215e","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/header.styl","shasum":"d27d0057b86dc61a1ab8a9037ee43dfcc43766b3","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/helper.styl","shasum":"52d4ee51b7087c2c2a7e7ded6f63270165d9de89","modified":1444457487524},{"_id":"themes/iceman/source/css/_partial/index.styl","shasum":"0d219fc6fb76c0d4ffd1dc2a119969d78a157285","modified":1444457487524},{"_id":"themes/iceman/source/css/style.styl","shasum":"b096cc43460e68004bbef41229f67420b5816637","modified":1444457487524},{"_id":"themes/iceman/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1444457487524},{"_id":"themes/iceman/source/fancybox/fancybox_loading.gif","shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1444457487524},{"_id":"themes/iceman/source/fancybox/fancybox_loading@2x.gif","shasum":"273b123496a42ba45c3416adb027cd99745058b0","modified":1444457487524},{"_id":"themes/iceman/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1444457487524},{"_id":"themes/iceman/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1444457487524},{"_id":"themes/iceman/source/fancybox/fancybox_sprite@2x.png","shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/helpers/fancybox_buttons.png","shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-buttons.js","shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-buttons.css","shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-media.js","shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-thumbs.css","shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/helpers/jquery.fancybox-thumbs.js","shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/jquery.fancybox.css","shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/jquery.fancybox.js","shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1444457487527},{"_id":"themes/iceman/source/fancybox/jquery.fancybox.pack.js","shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1444457487527},{"_id":"themes/iceman/source/font/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1444457487527},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.eot","shasum":"a17d0f10534303e40f210c506ebb8703fa23b7de","modified":1444457487527},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.ttf","shasum":"194ccb4acf77a03dc25bcc174edb266143704fec","modified":1444457487527},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.woff","shasum":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e","modified":1444457487527},{"_id":"themes/iceman/source/font/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1444457487527},{"_id":"themes/iceman/source/font/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1444457487531},{"_id":"themes/iceman/source/fotorama/fotorama.css","shasum":"24d089e2a765291c343af33c9a17a9be72ee57e7","modified":1444457487531},{"_id":"themes/iceman/source/fotorama/fotorama.js","shasum":"187701f7d2421a5571d0f5eb46ee1594ada958df","modified":1444457487531},{"_id":"themes/iceman/source/img/author.jpg","shasum":"b81dd793ec2c41fabe81841dea6a52133f8ad03a","modified":1444470849113},{"_id":"themes/iceman/source/img/author1.jpg","shasum":"a5ea246b096bd6cf1292a9a76048c49fe92cac22","modified":1444457487531},{"_id":"themes/iceman/source/img/favicon.ico","shasum":"fbbfa0f8a81e922d80b7b9450685001714b367f2","modified":1444457487531},{"_id":"themes/iceman/source/img/logo.svg","shasum":"0eb0ae32d95c6f0b14adb9ab491775dcd1da3af3","modified":1444457487531},{"_id":"themes/iceman/source/img/logo.jpg","shasum":"09eda7ded89cc7f4f7d0eec54c1e86de3b1df65c","modified":1444472311533},{"_id":"themes/iceman/source/img/pacman.jpg","shasum":"023ad188a5d544d6befdfc94004d61d8bfda249b","modified":1444470710683},{"_id":"themes/iceman/source/img/pacman1.jpg","shasum":"7e873f2f40a52f8c679302b88bb0809a6abafe5c","modified":1444457487531},{"_id":"themes/iceman/source/font/coveredbyyourgrace-webfont.svg","shasum":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53","modified":1444457487527},{"_id":"themes/iceman/source/font/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1444457487531},{"_id":"themes/iceman/source/js/jquery-2.1.0.min.js","shasum":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f","modified":1444457487531},{"_id":"themes/iceman/source/font/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1444457487531},{"_id":"public/js/jquery-2.1.0.min.js","modified":1453032096719,"shasum":"98884258cbdb0d939fa2c5e74fc7ac9e56d8170f"},{"_id":"public/img/pacman1.jpg","modified":1453032096725,"shasum":"7e873f2f40a52f8c679302b88bb0809a6abafe5c"},{"_id":"public/img/pacman.jpg","modified":1453032096728,"shasum":"023ad188a5d544d6befdfc94004d61d8bfda249b"},{"_id":"public/img/logo.svg","modified":1453032096729,"shasum":"0eb0ae32d95c6f0b14adb9ab491775dcd1da3af3"},{"_id":"public/img/logo.jpg","modified":1453032096731,"shasum":"09eda7ded89cc7f4f7d0eec54c1e86de3b1df65c"},{"_id":"public/img/favicon.ico","modified":1453032096732,"shasum":"fbbfa0f8a81e922d80b7b9450685001714b367f2"},{"_id":"public/img/author1.jpg","modified":1453032096736,"shasum":"a5ea246b096bd6cf1292a9a76048c49fe92cac22"},{"_id":"public/img/author.jpg","modified":1453032096740,"shasum":"b81dd793ec2c41fabe81841dea6a52133f8ad03a"},{"_id":"public/fotorama/fotorama.js","modified":1453032096741,"shasum":"187701f7d2421a5571d0f5eb46ee1594ada958df"},{"_id":"public/fotorama/fotorama.css","modified":1453032096742,"shasum":"24d089e2a765291c343af33c9a17a9be72ee57e7"},{"_id":"public/font/fontawesome-webfont.woff","modified":1453032096746,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/font/fontawesome-webfont.ttf","modified":1453032096749,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/font/fontawesome-webfont.svg","modified":1453032096752,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/font/fontawesome-webfont.eot","modified":1453032096754,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/font/coveredbyyourgrace-webfont.woff","modified":1453032096756,"shasum":"c6f8dc1a2f6ce914f120e80a876b8fd77b98888e"},{"_id":"public/font/coveredbyyourgrace-webfont.ttf","modified":1453032096759,"shasum":"194ccb4acf77a03dc25bcc174edb266143704fec"},{"_id":"public/font/coveredbyyourgrace-webfont.svg","modified":1453032096761,"shasum":"eabdb262d8e246865dfb56031f01ff6e8d2f9d53"},{"_id":"public/font/coveredbyyourgrace-webfont.eot","modified":1453032096762,"shasum":"a17d0f10534303e40f210c506ebb8703fa23b7de"},{"_id":"public/font/FontAwesome.otf","modified":1453032096767,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1453032096769,"shasum":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e"},{"_id":"public/fancybox/jquery.fancybox.js","modified":1453032096771,"shasum":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1453032096772,"shasum":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","modified":1453032096774,"shasum":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c"},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","modified":1453032096775,"shasum":"4ac329c16a5277592fc12a37cca3d72ca4ec292f"},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","modified":1453032096776,"shasum":"294420f9ff20f4e3584d212b0c262a00a96ecdb3"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","modified":1453032096777,"shasum":"dc3645529a4bf72983a39fa34c1eb9146e082019"},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","modified":1453032096778,"shasum":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8"},{"_id":"public/fancybox/helpers/fancybox_buttons.png","modified":1453032096781,"shasum":"e385b139516c6813dcd64b8fc431c364ceafe5f3"},{"_id":"public/fancybox/fancybox_sprite@2x.png","modified":1453032096783,"shasum":"30c58913f327e28f466a00f4c1ac8001b560aed8"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1453032096786,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1453032096788,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading@2x.gif","modified":1453032096789,"shasum":"273b123496a42ba45c3416adb027cd99745058b0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1453032096792,"shasum":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c"},{"_id":"public/fancybox/blank.gif","modified":1453032096793,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1453032097493,"shasum":"9480ca0b717f30876ea0644a07a0f8f171d63307"},{"_id":"public/2016/01/17/mount-partitions-on-startup-in-archlinux/index.html","modified":1453032508790,"shasum":"44ec961ccc2acb4d7f9ef4abf48d30d88fbd240c"},{"_id":"public/2015/11/22/csrf-defense/index.html","modified":1453032223807,"shasum":"a7edab00ade5110607b0dcaed2b5f85e62c0c825"},{"_id":"public/2015/11/08/transactional/index.html","modified":1453032223827,"shasum":"3395126d6b5a75a04f01f2723e9b8f35608b4059"},{"_id":"public/2015/10/25/Spring-circular-dependency/index.html","modified":1453032223852,"shasum":"555ba2f5a9f6d7044495ed4b4a6e623ea6d94985"},{"_id":"public/2015/09/24/git-base-commands/index.html","modified":1453032223866,"shasum":"0dbc3e2628f34ad6ab772c18dff1d81c85b69ee0"},{"_id":"public/archives/index.html","modified":1453032223874,"shasum":"b5b9b26e9ccbcd0dda0ab032b876fabc011ca6bf"},{"_id":"public/archives/2015/index.html","modified":1453032223881,"shasum":"77c159e4f8b151117ceba6bfb148f34ff4e88a48"},{"_id":"public/archives/2015/09/index.html","modified":1453032223885,"shasum":"f91d097cf0ab79e67d28a3c0ea7b27a713b4d113"},{"_id":"public/archives/2015/10/index.html","modified":1453032223892,"shasum":"6c595af6d422036b2ed439ad5711966be9d17de3"},{"_id":"public/archives/2015/11/index.html","modified":1453032223898,"shasum":"1ea2b667e2b839eb86d702f705adbea1de583c0d"},{"_id":"public/archives/2016/index.html","modified":1453032223906,"shasum":"4f466a27800aa8da5f24a4cb5b8805234e7104ad"},{"_id":"public/archives/2016/01/index.html","modified":1453032223911,"shasum":"ae7ae36982183b1889c0e1eadcfa60c12444db7b"},{"_id":"public/atom.xml","modified":1453032508898,"shasum":"4aa60fc2d2c82e815d5a5028d86449e7503876b9"},{"_id":"public/index.html","modified":1453032223921,"shasum":"ab7d49ffd60b354aed278d17394b91fddfe54139"},{"_id":"public/sitemap.xml","modified":1453032508907,"shasum":"ef4aeecca11cb203c9da869bec1fc3b30d7c5fa1"},{"_id":"public/tags/circular-dependency/index.html","modified":1453032223926,"shasum":"8da664e502016970c0adb82cff46d02594551097"},{"_id":"public/tags/spring/index.html","modified":1453032223931,"shasum":"fa82138065fb45c9fbe048bff407317bfa13ee6a"},{"_id":"public/tags/java/index.html","modified":1453032223940,"shasum":"c902715cf1bf55e6b19d5f0c0dd8bb2d9dff3f7c"},{"_id":"public/tags/inherited/index.html","modified":1453032223945,"shasum":"5270c54a9f3ed34a4d91d0ad2c5e43577275dcbe"},{"_id":"public/tags/transactional/index.html","modified":1453032223950,"shasum":"c8318d8c9ab8d2b7af72100d52f8a8b953f42e6f"},{"_id":"public/tags/archlinux/index.html","modified":1453032223956,"shasum":"3b473e4fa2019f6d68df8e0da7dba8e9dd2014e5"},{"_id":"public/tags/mount-partitions/index.html","modified":1453032223962,"shasum":"470b87a92ce3b0ba623c73704b08bd1eab8e5101"},{"_id":"public/tags/grub-rescue/index.html","modified":1453032223966,"shasum":"64b53e744748dd5a2584e9feaede7e10c20c26b2"},{"_id":"public/tags/git/index.html","modified":1453032223970,"shasum":"52278dd6d89dcaca32084142dfc70919e6044e05"},{"_id":"public/tags/csrf/index.html","modified":1453032223975,"shasum":"17b2886def9226a00906f82b50eaf48b9cc1d661"}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Spring circular dependency","date":"2015-10-25T06:11:22.000Z","_content":"最近踩了一个继承加循环依赖的坑，抽象出的代码如下：\nChildClass:\n```\n@Service\npublic class ChildClass extends ParentClass {\n\n    @Resource\n    private TestService testService;\n\n    public String play() {\n        return testService.getParent().play();\n    }\n}\n```\nParentClass:\n```\npublic class ParentClass {\n\n    private String value = \"I am parent class\";\n\n    public String play() {\n        return value;\n    }\n\n    public void setValue(String str) {\n        this.value = str;\n    }\n}\n```\nTestService:\n```\n@Service\npublic class TestService {\n    private ParentClass parent;\n\n    @PostConstruct\n    public void init() {\n        parent = create();\n    }\n\n    public ParentClass getParent() {\n        return this.parent;\n    }\n\n    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n    public ParentClass create() {\n        try {\n            Class classDefinition = Class.forName(\"com.springapp.mvc.inherited.ChildClass\");\n            ParentClass parent = (ParentClass) classDefinition.getConstructor(new Class[0]).newInstance(new Object[0]);\n            parent.setValue(\"I was processed by test service\");\n            return parent;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n```\nResultController:\n```\n@Controller\n@RequestMapping(\"/inherited\")\npublic class ResultController {\n\n    @Resource\n    private ChildClass childClass;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public ModelAndView printWelcome() {\n        ModelAndView modelAndView = new ModelAndView(\"hello\");\n        modelAndView.addObject(\"message\", childClass.play());\n        return modelAndView;\n    }\n}\n```\n\n我们注意到，ChildClass重写了ParentClass的play方法。由于在TestService中使用反射  \n方式生成了ChildClass的实例，并赋值给了ParentClass的实例，此时ParentClass实例并不能  \n访问到ChildClass实例的成员变量testService，且ParentClass实例的play方法已经被  \nChildClass实例的play方法隐藏，也就是说<code>testService.getParent().play()</code>  \n实际调用的是ChildClass的play()方法，显而易见，此处出现了循环调用。但是由于ParentClass  \n的实例中<code>testService == null</code>，因此程序在进入这一层时会抛出NPE。\n\n之后我们使用注解在TestService中实现成员变量parent的初始化，代码如下：\nParentClass:\n```\n@Service\npublic class TestService {\n    \n    @Resource\n    private ParentClass parent;\n\n    @PostConstruct\n    public void init() {\n        parent.setValue(\"I was processed by test service\");\n    }\n\n    public ParentClass getParent() {\n        return this.parent;\n    }\n}\n```\n此时运行程序，NPE消失了，但是出现栈溢出问题。\n从<code>＠Resource</code>的注解来看，注解的继承关系是向上的，所有使用注解注入的实例共用  \n资源，即以依赖注入形式实现的ChildClass和ParentClass的实例共享资源。因此，TestService中  \n的成员变量parent可以访问到子类ChildClass实例的成员变量testService，进而形成循环依赖并  \n最终导致栈溢出。\n<code>＠Resource</code>部分注解：\n```\n * Even though this annotation is not marked Inherited, deployment\n * tools are required to examine all superclasses of any component\n * class to discover all uses of this annotation in all superclasses.\n * All such annotation instances specify resources that are needed\n * by the application component.  Note that this annotation may\n * appear on private fields and methods of superclasses; the container\n * is required to perform injection in these cases as well.\n```\n","source":"_posts/Spring-circular-dependency.md","raw":"title: Spring circular dependency\ndate: 2015-10-25 14:11:22\ntags: [circular dependency, spring, java, inherited]\n---\n最近踩了一个继承加循环依赖的坑，抽象出的代码如下：\nChildClass:\n```\n@Service\npublic class ChildClass extends ParentClass {\n\n    @Resource\n    private TestService testService;\n\n    public String play() {\n        return testService.getParent().play();\n    }\n}\n```\nParentClass:\n```\npublic class ParentClass {\n\n    private String value = \"I am parent class\";\n\n    public String play() {\n        return value;\n    }\n\n    public void setValue(String str) {\n        this.value = str;\n    }\n}\n```\nTestService:\n```\n@Service\npublic class TestService {\n    private ParentClass parent;\n\n    @PostConstruct\n    public void init() {\n        parent = create();\n    }\n\n    public ParentClass getParent() {\n        return this.parent;\n    }\n\n    @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n    public ParentClass create() {\n        try {\n            Class classDefinition = Class.forName(\"com.springapp.mvc.inherited.ChildClass\");\n            ParentClass parent = (ParentClass) classDefinition.getConstructor(new Class[0]).newInstance(new Object[0]);\n            parent.setValue(\"I was processed by test service\");\n            return parent;\n        } catch (Exception e) {\n            e.printStackTrace();\n            return null;\n        }\n    }\n}\n```\nResultController:\n```\n@Controller\n@RequestMapping(\"/inherited\")\npublic class ResultController {\n\n    @Resource\n    private ChildClass childClass;\n\n    @RequestMapping(method = RequestMethod.GET)\n    public ModelAndView printWelcome() {\n        ModelAndView modelAndView = new ModelAndView(\"hello\");\n        modelAndView.addObject(\"message\", childClass.play());\n        return modelAndView;\n    }\n}\n```\n\n我们注意到，ChildClass重写了ParentClass的play方法。由于在TestService中使用反射  \n方式生成了ChildClass的实例，并赋值给了ParentClass的实例，此时ParentClass实例并不能  \n访问到ChildClass实例的成员变量testService，且ParentClass实例的play方法已经被  \nChildClass实例的play方法隐藏，也就是说<code>testService.getParent().play()</code>  \n实际调用的是ChildClass的play()方法，显而易见，此处出现了循环调用。但是由于ParentClass  \n的实例中<code>testService == null</code>，因此程序在进入这一层时会抛出NPE。\n\n之后我们使用注解在TestService中实现成员变量parent的初始化，代码如下：\nParentClass:\n```\n@Service\npublic class TestService {\n    \n    @Resource\n    private ParentClass parent;\n\n    @PostConstruct\n    public void init() {\n        parent.setValue(\"I was processed by test service\");\n    }\n\n    public ParentClass getParent() {\n        return this.parent;\n    }\n}\n```\n此时运行程序，NPE消失了，但是出现栈溢出问题。\n从<code>＠Resource</code>的注解来看，注解的继承关系是向上的，所有使用注解注入的实例共用  \n资源，即以依赖注入形式实现的ChildClass和ParentClass的实例共享资源。因此，TestService中  \n的成员变量parent可以访问到子类ChildClass实例的成员变量testService，进而形成循环依赖并  \n最终导致栈溢出。\n<code>＠Resource</code>部分注解：\n```\n * Even though this annotation is not marked Inherited, deployment\n * tools are required to examine all superclasses of any component\n * class to discover all uses of this annotation in all superclasses.\n * All such annotation instances specify resources that are needed\n * by the application component.  Note that this annotation may\n * appear on private fields and methods of superclasses; the container\n * is required to perform injection in these cases as well.\n```\n","slug":"Spring-circular-dependency","published":1,"updated":"2015-10-29T09:38:08.607Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijihskqp0000qcamjpt8ztgy"},{"title":"@transactional","date":"2015-11-08T03:36:44.000Z","_content":"在<code>＠Transactional</code>注解的程序块中调用未使用<code>＠Transactional</code>注解的方法，则事务将在未被注解的方法中继续生效。在未被注解的方法中，继续使用事务中的数据库连接，该方法中的任何异常都会引起事务的回滚。\n在<code>＠Transactional</code>注解的程序块中调用使用<code>＠Transactional</code>注解的方法，如果这两个方法属于同一个实例，那么事务在被调用的方法中不会生效；如果两个方法属于不同的实例，则事务在被调用的方法中继续生效。\n同理，在一个实例内部，通过未被<code>＠Transactional</code>注解的方法调用被<code>＠Transactional</code>注解的方法，被调用方法的事务也不会生效。\n之所以会出现以上现象，是受到Spring AOP机制的限制。<code>＠Transactional</code>注解使用的是Spring的AOP机制，AOP仅在外部实例调用被注解的方法时才会生效，在同一个实例中调用任何被注解的方法都只能调用到原生方法，而不是注解后生成的代理方法。\n如果不得不在一个实例内部调用被<code>＠Transactional</code>注解的方法，需要在这个实例内部显示的注入自身类的实例，并通过这个被注入的实例调用被注解的方法，才能访问到代理方法使事务生效。示例如下：\n```\n@Service(\"transactionalTestClass\")\npublic class TransactionalTestClass {\n    \n    @Resource(\"transactionalTestClass\")\n    private TransactionalTestClass transactionalTestClass;\n    \n    public void noTransactionalMethod(){\n        transactionalTestClass.transactionalMethod();\n    }\n\n    @Transactional(rollbackFor = Exception.class)\n    public void transactionalMethod() {\n        //do somthing\n    }\n}\n```","source":"_posts/transactional.md","raw":"title: '@transactional'\ndate: 2015-11-08 11:36:44\ntags: [transactional, spring, java]\n---\n在<code>＠Transactional</code>注解的程序块中调用未使用<code>＠Transactional</code>注解的方法，则事务将在未被注解的方法中继续生效。在未被注解的方法中，继续使用事务中的数据库连接，该方法中的任何异常都会引起事务的回滚。\n在<code>＠Transactional</code>注解的程序块中调用使用<code>＠Transactional</code>注解的方法，如果这两个方法属于同一个实例，那么事务在被调用的方法中不会生效；如果两个方法属于不同的实例，则事务在被调用的方法中继续生效。\n同理，在一个实例内部，通过未被<code>＠Transactional</code>注解的方法调用被<code>＠Transactional</code>注解的方法，被调用方法的事务也不会生效。\n之所以会出现以上现象，是受到Spring AOP机制的限制。<code>＠Transactional</code>注解使用的是Spring的AOP机制，AOP仅在外部实例调用被注解的方法时才会生效，在同一个实例中调用任何被注解的方法都只能调用到原生方法，而不是注解后生成的代理方法。\n如果不得不在一个实例内部调用被<code>＠Transactional</code>注解的方法，需要在这个实例内部显示的注入自身类的实例，并通过这个被注入的实例调用被注解的方法，才能访问到代理方法使事务生效。示例如下：\n```\n@Service(\"transactionalTestClass\")\npublic class TransactionalTestClass {\n    \n    @Resource(\"transactionalTestClass\")\n    private TransactionalTestClass transactionalTestClass;\n    \n    public void noTransactionalMethod(){\n        transactionalTestClass.transactionalMethod();\n    }\n\n    @Transactional(rollbackFor = Exception.class)\n    public void transactionalMethod() {\n        //do somthing\n    }\n}\n```","slug":"transactional","published":1,"updated":"2015-11-08T08:19:07.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijihskra0009qcams2dixawa"},{"title":"mount partitions on startup in archlinux","date":"2016-01-17T09:36:47.000Z","_content":"\n机器装了两个系统，一个win7备用，一个linux生产。但是最近linux的剩余磁盘空间仅10G多，  \n眼看就要不够用了，于是想着挤挤win7，分些空间出来给linux。\n\n#### grub rescue的处理\n第一步，先在win7中压缩了20G出来，然后重启机器准备进入linux加载新分区，此时出现了  \n问题，grub无法正常启动，进入了rescue界面。\n解决办法是：\n1. 列出所有分区\ngrub rescue> ls\n2. 依次ls每个分区直到找到不报'unknown filesystem'的分区，比如n=5\ngrub rescue> ls (hd0,msdos5)/boot/grub\n3. 依次执行以下命令，可进入正常的系统引导界面\ngrub rescue> set root=(hd0,msdos5)/boot/grub\ngrub rescue> set prefix=(hd0,msdos5)/boot/grub\ngrub rescue> insmod normal\ngrub rescue> normal\n4. 进入linux操作系统，执行以下命令修复grub，重启后grub可恢复正常\n$ sudo grub-install /dev/sda\n\n#### archlinux挂载分区\n第二步，配置新分区在linux启动的时候自动挂载，并映射到某一个文件路径，比如/extend\n1. 找到要挂载的新分区硬盘号码，比如/dev/sda5\n$ sudo fdisk -l\n2. 格式化/dev/sda5为linux系统的文件格式(也可使用其它稳定的文件格式)\n$ sudo mkfs.ext4 /dev/sda5\n3. 配置新分区在系统启动的时候挂载，并映射为/extend\n修改<code>/etc/fstab</code>文件，在最后添加一行，注意使用对应的UUID并修改加载顺序\nUUID=59f8ba70-62d4-4d1d-982e-a33166d59394  /extend  ext4  rw,relatime,data=ordered   0 3","source":"_posts/mount-partitions-on-startup-in-archlinux.md","raw":"title: mount partitions on startup in archlinux\ndate: 2016-01-17 17:36:47\ntags: [archlinux, mount partitions, grub rescue]\n---\n\n机器装了两个系统，一个win7备用，一个linux生产。但是最近linux的剩余磁盘空间仅10G多，  \n眼看就要不够用了，于是想着挤挤win7，分些空间出来给linux。\n\n#### grub rescue的处理\n第一步，先在win7中压缩了20G出来，然后重启机器准备进入linux加载新分区，此时出现了  \n问题，grub无法正常启动，进入了rescue界面。\n解决办法是：\n1. 列出所有分区\ngrub rescue> ls\n2. 依次ls每个分区直到找到不报'unknown filesystem'的分区，比如n=5\ngrub rescue> ls (hd0,msdos5)/boot/grub\n3. 依次执行以下命令，可进入正常的系统引导界面\ngrub rescue> set root=(hd0,msdos5)/boot/grub\ngrub rescue> set prefix=(hd0,msdos5)/boot/grub\ngrub rescue> insmod normal\ngrub rescue> normal\n4. 进入linux操作系统，执行以下命令修复grub，重启后grub可恢复正常\n$ sudo grub-install /dev/sda\n\n#### archlinux挂载分区\n第二步，配置新分区在linux启动的时候自动挂载，并映射到某一个文件路径，比如/extend\n1. 找到要挂载的新分区硬盘号码，比如/dev/sda5\n$ sudo fdisk -l\n2. 格式化/dev/sda5为linux系统的文件格式(也可使用其它稳定的文件格式)\n$ sudo mkfs.ext4 /dev/sda5\n3. 配置新分区在系统启动的时候挂载，并映射为/extend\n修改<code>/etc/fstab</code>文件，在最后添加一行，注意使用对应的UUID并修改加载顺序\nUUID=59f8ba70-62d4-4d1d-982e-a33166d59394  /extend  ext4  rw,relatime,data=ordered   0 3","slug":"mount-partitions-on-startup-in-archlinux","published":1,"updated":"2016-01-17T12:08:22.637Z","_id":"cijihskrc000eqcameexiobgp","comments":1,"layout":"post","photos":[],"link":""},{"title":"git base commands","date":"2015-09-24T03:52:12.000Z","_content":"#### 初始化\n<code>$ mkdir test</code>\n<code>$ cd test</code>\n<code>$ git init</code>\n\n#### config\n<code>$ git config --global user.name username</code>\n<code>$ git config --global user.email useremail.chn@gmail.com</code>\n\n#### 文件修改 、查看状态、文件添加以及修改提交\n<code>$ echo \"hello world\">>new.txt</code>\n<code>$ git status</code>\n<code>$ git add new.txt</code>\n<code>$ git status</code>\n提交第一个版本\n<code>$ git commit -m \"first\"</code> \n\n<code>$ echo \"hello new world\">>new.txt</code>\n<code>$ git status</code>\n<code>$ git add new.txt</code>\n<code>$ git status</code>\n提交第二个版本\n<code>$ git commit -m \"second\"</code>\n\n#### 版本切换\n查看更新记录\n<code>$ git log</code>\n使用能够区别版本的前几位即可\n<code>$ git checkout commit-id</code>\n\n#### 远程提交\n添加远程仓库\n<code>$ git remote add origin https://github.com/windpuller/test.git</code>\n将修改提交到服务器端\n<code>$ git push -u origin master</code>\n\n#### 检出仓库\n创建本地仓库的克隆版本\n<code>$ git clone /path/to/repository</code>\n创建远端服务器的克隆版本\n<code>$ git clone uxername@host:/past/to/repository</code>\n\n#### 分支\n创建分支\n<code>$ git branch branch1</code>\n切换分支\n<code>$ git checkout branch1</code>\n删除本地分支\n<code>$ git branch -d branch1 </code>\n删除远程分支(慎重使用)\n<code>$ git branch -r -d origin/branch1</code>\n<code>$ git push origin :branch1</code>\n将分支推送到远端仓库，不推送的话分支是不为他人所见的\n<code>$ git push origin branch1</code>\n\n\n#### 更新与合并\n更新本地仓库至最新改动，完成了获取fetch并合并merge改动的功能\n<code>$ git pull</code>\n合并其他分支到当前分支\n<code>$ git merge branch</code>\n在以上两种情况下，git都会尝试自动合并改动。但是不是每次合并都能成功，可能出现冲突。\n这时候就需要修改文件来手动合并这些冲突。改完文件之后，需要执行以下命令以将它们标记为合并成功：\n<code>$ git add filename</code>\n在合并改动之前，可以使用如下命令预览差异：\n<code>$git diff source_branch target_branch</code>\n\n#### 标签\n为某个版本创建标签\n<code>$ git tag tag-name commit-ID</code>\n\n#### 替换本地改动\n如果操作失误，可以使用HEAD中的最新内容替换掉工作目录中的文件，已添加到缓存区的改动和新文件都不会受到影响\n<code>$ git checkout -- filename</code>\n如果想要放弃本地的所有改动和提交，可以到服务器上获取最新的版本历史，并将本地主分支指向它：\n<code>$ git fetch origin</code>\n<code>$ git reset --hard origin/master</code>\n\n#### 实用小贴士\n内建的图形化git\n<code>$ gitk</code>\n彩色的git输出\n<code>$ git config color.ui true</code>\n显示历史记录时，每个提交的信息只显示一行\n<code>$ git config format.pretty oneline</code>\n交互式添加文件到暂存区\n<code>$ git add -i</code>\n#### 参考文献：\n1. http://rogerdudler.github.io/git-guide/index.zh.html","source":"_posts/git-base-commands.md","raw":"title: git base commands\ndate: 2015-09-24 11:52:12\ntags: git\n---\n#### 初始化\n<code>$ mkdir test</code>\n<code>$ cd test</code>\n<code>$ git init</code>\n\n#### config\n<code>$ git config --global user.name username</code>\n<code>$ git config --global user.email useremail.chn@gmail.com</code>\n\n#### 文件修改 、查看状态、文件添加以及修改提交\n<code>$ echo \"hello world\">>new.txt</code>\n<code>$ git status</code>\n<code>$ git add new.txt</code>\n<code>$ git status</code>\n提交第一个版本\n<code>$ git commit -m \"first\"</code> \n\n<code>$ echo \"hello new world\">>new.txt</code>\n<code>$ git status</code>\n<code>$ git add new.txt</code>\n<code>$ git status</code>\n提交第二个版本\n<code>$ git commit -m \"second\"</code>\n\n#### 版本切换\n查看更新记录\n<code>$ git log</code>\n使用能够区别版本的前几位即可\n<code>$ git checkout commit-id</code>\n\n#### 远程提交\n添加远程仓库\n<code>$ git remote add origin https://github.com/windpuller/test.git</code>\n将修改提交到服务器端\n<code>$ git push -u origin master</code>\n\n#### 检出仓库\n创建本地仓库的克隆版本\n<code>$ git clone /path/to/repository</code>\n创建远端服务器的克隆版本\n<code>$ git clone uxername@host:/past/to/repository</code>\n\n#### 分支\n创建分支\n<code>$ git branch branch1</code>\n切换分支\n<code>$ git checkout branch1</code>\n删除本地分支\n<code>$ git branch -d branch1 </code>\n删除远程分支(慎重使用)\n<code>$ git branch -r -d origin/branch1</code>\n<code>$ git push origin :branch1</code>\n将分支推送到远端仓库，不推送的话分支是不为他人所见的\n<code>$ git push origin branch1</code>\n\n\n#### 更新与合并\n更新本地仓库至最新改动，完成了获取fetch并合并merge改动的功能\n<code>$ git pull</code>\n合并其他分支到当前分支\n<code>$ git merge branch</code>\n在以上两种情况下，git都会尝试自动合并改动。但是不是每次合并都能成功，可能出现冲突。\n这时候就需要修改文件来手动合并这些冲突。改完文件之后，需要执行以下命令以将它们标记为合并成功：\n<code>$ git add filename</code>\n在合并改动之前，可以使用如下命令预览差异：\n<code>$git diff source_branch target_branch</code>\n\n#### 标签\n为某个版本创建标签\n<code>$ git tag tag-name commit-ID</code>\n\n#### 替换本地改动\n如果操作失误，可以使用HEAD中的最新内容替换掉工作目录中的文件，已添加到缓存区的改动和新文件都不会受到影响\n<code>$ git checkout -- filename</code>\n如果想要放弃本地的所有改动和提交，可以到服务器上获取最新的版本历史，并将本地主分支指向它：\n<code>$ git fetch origin</code>\n<code>$ git reset --hard origin/master</code>\n\n#### 实用小贴士\n内建的图形化git\n<code>$ gitk</code>\n彩色的git输出\n<code>$ git config color.ui true</code>\n显示历史记录时，每个提交的信息只显示一行\n<code>$ git config format.pretty oneline</code>\n交互式添加文件到暂存区\n<code>$ git add -i</code>\n#### 参考文献：\n1. http://rogerdudler.github.io/git-guide/index.zh.html","slug":"git-base-commands","published":1,"updated":"2015-12-15T07:37:09.491Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijihskri000lqcam1fdliuon"},{"title":"csrf defense","date":"2015-11-22T06:39:32.000Z","_content":"*本文仅用来自己备忘，更详细内容请[阅读原文](https://www.ibm.com/developerworks/cn/web/1102_niugang_csrf/)。*\n\n#### 防止csrf攻击的常用方法\n##### 1. HTTP Reference\n**原理**：检查HTTP Reference的地址，判定请求的来源。\n**缺点**：低版本浏览器（IE6等）可以篡改HTTP Reference，达不到防御效果；较新的浏览器  \n允许用户关闭HTTP Reference的使用，致使用户的正常请求也不能通过。\n\n##### 2. url中添加token参数\n**原理**：检查请求url中的token值是否是合法的。\n**缺点**：所有请求地址中添加token字段，实现起来较复杂；url中的token很容易被攻击者获取到。\n\n##### 3. HTTP协议头部添加自定义属性\n**原理**：检查HTTP头部的csrfToken字段值是否合法。\n**缺点**：要使用XMLHttpRequest一次性给该类的所有请求添加csrfToken字段，而XMLHttpRequest\n的使用局限性很大，并非所有的请求都适合由XMLHttpRequest发起，使用XMLHttpRequest请求到\n的页面不能被浏览器记录，给用户带来不便。\n\n#### 推荐的防御方式\n2+3, 对于安全性要求没那么高的请求，可以采用在url中添加token参数的方法防御  \ncsrf，对于安全性要求比较高的请求，则使用在HTTP协议头部添加csrfToken的方式。","source":"_posts/csrf-defense.md","raw":"title: csrf defense\ndate: 2015-11-22 14:39:32\ntags: csrf\n---\n*本文仅用来自己备忘，更详细内容请[阅读原文](https://www.ibm.com/developerworks/cn/web/1102_niugang_csrf/)。*\n\n#### 防止csrf攻击的常用方法\n##### 1. HTTP Reference\n**原理**：检查HTTP Reference的地址，判定请求的来源。\n**缺点**：低版本浏览器（IE6等）可以篡改HTTP Reference，达不到防御效果；较新的浏览器  \n允许用户关闭HTTP Reference的使用，致使用户的正常请求也不能通过。\n\n##### 2. url中添加token参数\n**原理**：检查请求url中的token值是否是合法的。\n**缺点**：所有请求地址中添加token字段，实现起来较复杂；url中的token很容易被攻击者获取到。\n\n##### 3. HTTP协议头部添加自定义属性\n**原理**：检查HTTP头部的csrfToken字段值是否合法。\n**缺点**：要使用XMLHttpRequest一次性给该类的所有请求添加csrfToken字段，而XMLHttpRequest\n的使用局限性很大，并非所有的请求都适合由XMLHttpRequest发起，使用XMLHttpRequest请求到\n的页面不能被浏览器记录，给用户带来不便。\n\n#### 推荐的防御方式\n2+3, 对于安全性要求没那么高的请求，可以采用在url中添加token参数的方法防御  \ncsrf，对于安全性要求比较高的请求，则使用在HTTP协议头部添加csrfToken的方式。","slug":"csrf-defense","published":1,"updated":"2015-11-22T08:05:01.914Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cijihskrs000oqcams03tpui2"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cijihskqp0000qcamjpt8ztgy","tag_id":"cijihskqv0001qcamv15klegg","_id":"cijihskqz0005qcamlz7ov4xx"},{"post_id":"cijihskqp0000qcamjpt8ztgy","tag_id":"cijihskqx0002qcam7u2f13d5","_id":"cijihskqz0006qcamqqgvlj2y"},{"post_id":"cijihskqp0000qcamjpt8ztgy","tag_id":"cijihskqy0003qcamx4j3x8is","_id":"cijihskqz0007qcamfg6gt46k"},{"post_id":"cijihskqp0000qcamjpt8ztgy","tag_id":"cijihskqy0004qcamhrwhfts1","_id":"cijihskqz0008qcamwda2x5ml"},{"post_id":"cijihskra0009qcams2dixawa","tag_id":"cijihskrb000aqcamwvsr7ly8","_id":"cijihskrb000bqcamsus0499o"},{"post_id":"cijihskra0009qcams2dixawa","tag_id":"cijihskqx0002qcam7u2f13d5","_id":"cijihskrb000cqcam3wf6okat"},{"post_id":"cijihskra0009qcams2dixawa","tag_id":"cijihskqy0003qcamx4j3x8is","_id":"cijihskrb000dqcam72jw7laz"},{"post_id":"cijihskrc000eqcameexiobgp","tag_id":"cijihskre000fqcamn63hf5cr","_id":"cijihskrg000iqcam21biuft0"},{"post_id":"cijihskrc000eqcameexiobgp","tag_id":"cijihskrf000gqcamaz256j4u","_id":"cijihskrg000jqcam7b773oq6"},{"post_id":"cijihskrc000eqcameexiobgp","tag_id":"cijihskrf000hqcamatl6vp46","_id":"cijihskrh000kqcam8rl6hzh4"},{"post_id":"cijihskri000lqcam1fdliuon","tag_id":"cijihskrk000mqcamyt1h9f9l","_id":"cijihskrk000nqcamhqmxerzr"},{"post_id":"cijihskrs000oqcams03tpui2","tag_id":"cijihskrv000pqcamprfghbnm","_id":"cijihskrv000qqcamgtpu8a0r"}],"Tag":[{"name":"circular dependency","_id":"cijihskqv0001qcamv15klegg"},{"name":"spring","_id":"cijihskqx0002qcam7u2f13d5"},{"name":"java","_id":"cijihskqy0003qcamx4j3x8is"},{"name":"inherited","_id":"cijihskqy0004qcamhrwhfts1"},{"name":"transactional","_id":"cijihskrb000aqcamwvsr7ly8"},{"name":"archlinux","_id":"cijihskre000fqcamn63hf5cr"},{"name":"mount partitions","_id":"cijihskrf000gqcamaz256j4u"},{"name":"grub rescue","_id":"cijihskrf000hqcamatl6vp46"},{"name":"git","_id":"cijihskrk000mqcamyt1h9f9l"},{"name":"csrf","_id":"cijihskrv000pqcamprfghbnm"}]}}